# üê≥ GitHub Action to build and publish a Docker image of the dbt project to the prod environment (Artifact Registry)

name: Publish dbt project on prod environment

# üì¶ Trigger this workflow when a tag is created
on:
  push:
    tags:
      - "*"

# üåç Global environment variables
env:
  REGION: us                                      # GCP region (same as Artifact Registry)
  PROJECT_ID: ae-bootcamp-standupfree             # GCP project ID
  REPOSITORY: dbt-images-prod                     # Artifact Registry repo name for prod
  IMAGE_NAME: dbt-jaffle-shop                     # Docker image name

jobs:
  build-and-push-prod:
    runs-on: ubuntu-latest

    steps:
      # üì• Step 1: Checkout the source code with full history
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0           # Fetch all commits to calculate RC version properly
          ref: ${{ github.ref }}   # Ensure current branch is checked out

      # üîê Step 2: Authenticate to Google Cloud with service account
      - name: Set up Docker credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          export_environment_variables: true

      # ‚öôÔ∏è Step 3: Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # üè∑Ô∏è Step 4: Extract the tag that triggered the workflow (e.g., "1.0.0")
      - name: Extract Tag
        id: version
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"  # Safely gets the tag from full ref
          echo "tag=$TAG_NAME"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      # üèóÔ∏è Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }} \
                       -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest .

      # üöÄ Step 6: Push the Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
